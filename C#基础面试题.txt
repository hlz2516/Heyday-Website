1.byte b = 'a'; byte c = 1; byte d = 'ab'; byte e = '啊'; byte g = 256; 这些变量有些错误是错再哪里?
byte是整数类型，字符无法直接赋值给它，所以第一个错误
第二个符合整数类型，正确
第三个和第四个都是字符串，错误
第五个越界，byte的范围是0-255

2.string和stringbuilder的区别
string是存储在堆中的不可变量，而stringbuilder是可以动态增加字符串的
对于简单的字符串拼接操作，string和stringbuilder在性能差异上不大，只有频繁地操作才会有明显差异

3.什么是扩展方法
扩展方法就是使你能够向现有类型“添加”方法，无需修改类型
扩展方法必须满足的条件：
1.必须要静态类中的静态方法
2.第一个参数的类型是要扩展的类型，并且需要添加this关键字以标识其为扩展方法

4.值类型和引用类型的区别
值类型的值存储在栈中，引用类型的引用也存储在栈中，但这个引用指向的对象在托管堆中
值类型的复制是真的复制，但引用类型的复制是只复制引用，两个引用指向同一对象

5.new关键字的作用
1.创建对象实例
2.作为泛型的约束

6.int?和int有什么区别
int?是可空类型，其默认值为null
int就是整形，其默认值为0

7.C#中的委托是什么？
从C++角度看就是函数指针
从C#角度看可以理解为方法参数，像这种方法参数有func,action。

8.用最有效的方法算出2乘以8等于几？
用位运算，2左移三次

9.const和readonly有什么区别？
const是在声明时就必须初始化
readonly在声明时可以先不初始化，这个初始化过程延迟到在构造函数中进行
const是编译时常量，在编译时确定该值；readonly是运行时常量，在运行时确定该值

10.CTS、CLS、CLR分别作何解释
CTS:common type system。通用类型系统。.net通过提供公共类型，然后翻译成对应的.net类型
CLS：comon lanuguage specification.通用语言规范。.Net通过CLS提供了公共的语法，然后不同语言翻译生成对应的.Net语法。
CLR：Common Language Runtime 公共语言运行时，就是执行IL代码，管理GC等这些。

11.在.net中，配件的意思是？
程序集

12.静态成员和非静态成员的区别
1、静态成员需要被static修饰，非静态成员不需要加static。
2、在一个非静态类中既可以出现静态成员，也可以出现非静态成员；而在一个静态类中只能出现静态成员；
3、在一个非静态方法中，既可以访问静态成员也可以访问非静态成员；而在一个静态方法中，只允许访问静态成员。

13.c#可否对内存直接操作
C#在unsafe 模式下可以使用指针对内存进行操作, 但在托管模式下不可以使用指针

14.short s1 = 1; s1 = s1 + 1;有什么错? short s1 = 1; s1 += 1;有什么错?
s1=s1+1，s2是short，1是Int,两者相加后的结果是int，需要强转后才能付给s1。而s1+=1相当于s1=(short)(s1+1);其中隐含了强制类型转换

15.什么是强类型，什么是弱类型？哪种更好些？为什么?
强类型是在编译的时候就确定类型的数据，在执行时类型不能更改，而弱类型在执行的时候才会确定类型。
没有好不好，二者各有好处，强类型安全，因为它事先已经确定好了，而且效率高。一般用于编译型编程语言，如c++,java,c#,pascal等
弱类型相比而言不安全，在运行的时候容易出现错误，但它灵活，多用于解释型编程语言，如javascript,vbs,php等

16.using关键字的作用
1.引入命名空间
2.using语句，用来申请和释放资源

17.ref和out有什么区别
1.都是按引用类型进行传递
2.属性不是变量不能作为out、ref参数传递
3.ref参数必须初始化。out不需要初始化
4.作用，当方法有多个返回值时，out非常有用

18.a.Equals(b)和a==b一样吗？
不一样。equals是比较两者的内容是否一样，而==是比较两者引用是否一样。

19.&和&&的区别
&是位运算，返回结果是int类型 &&是逻辑运算，返回结果是bool类型

20.i++和++i有什么区别？
i++是先赋值，然后再自增；++i是先自增，后赋值。

21.as和is的区别
as在转换的同时判断兼容性，如果无法进行转换，返回位null（没有产生新的对象），
as转换是否成功判断的依据是是否位null is只是做类型兼容性判断，并不执行真正的类型转换，
返回true或false，对象为null也会返回false。